package com.uoa.telmaticsapp.data.services

class Constants {
    companion object{
        val KEY_BACKGROUND = "background"
        val KEY_NOTIFICATION_ID = "notificationId"
        val KEY_LOCATION_AND_SENSORS_VALUE_CHANGED_ACTION="com.uoa.android.telmatics.data.services.SENSORS_LOCATION_CHANGED"
        val KEY_GET_NEW_SENSOR_DATA="com.uoa.android.telmatics.data.services.SENSOR_DATA_CHANGED"
        val KEY_NOTIFICATION_STOP_ACTION = "com.uoa.android.telmatics.data.services.NOTIFICATION_STOP"
        val KEY_STOP_SERVICE="com.uoa.android.telmatics.data.services.STOP_SERVICE"
        val KEY_START_SERVICE="com.uoa.android.telmatics.data.services.START_SERVICE"
        val SENSORDID="SENSORID"
        val ACCELEROM="ACCELEROMETER"
        val ACCELEROMLTDA="ACCELEROMETERLTDA"
        val ACCELEROMLTDAUN="ACCELEROMETER_LTD_A_UN"
        val ACCELEROM_ACC="ACCELEROM_ACC"
        val GYRO="GYRO"
        val GYROLTDA="GYRO_LTDA"
        val GYROLTDAUN="GYRO_LTDA_UN"
        val GYRO_ACC="GYRO_ACC"
        val GRAVITY="GRAVITY"
        val GRAVITY_ACC="GRAVITY_ACC"
        val LIN_ACCELEROM="LIN_ACCELEROM"
        val LIN_ACCELEROM_ACC="LIN_ACCELEROM_ACC"
        val MAGNETO="MAGNETO"
        val MAGNETO_ACC="MAGNETO"
        val PROXIMITY="PROXIMITY"
        val PROXIMITYACC="PROXIMITY_ACC"
        val ROTVECT="ROTATIONAL_VECTOR"
        val ROTVECTACC="ROTATIONAL_VECTOR_ACC"
        val YAW="YAW"
        val PITCH="PITCH"
        val ROLL="ROLL"
        val LOC_TIME="LOCATION_TIME"
        val COLLECTED_DATE="COLLECTED_DATE"
        val TrackPOINT="TrackPoint"
        val ExternalFactorsModel="ExternalFactorsModel"
        val LASTPOINTS="LastKnownPoints"
        val LONGITUDE="longitude"
        val LATITUDE="latitude"
        val SENSORSDATA="sensorsData"
        val DISTANCE="totalMeters"
        val SPEED="speed"
        val LOC_ACCURACY="accuracy"
        val KEY_LOCATION_VALUE_CHANGED="LOCATION_CHANGED"

    }
}